syntax = "proto3";

package token;

option go_package = "github.com/achad747/grpc-token-manager/pkg/api";

service TokenService {
    rpc Create(TokenRequest) returns (TokenResponse);
    rpc Drop(TokenRequest) returns (TokenResponse);
    rpc Write(WriteRequest) returns (TokenResponse);
    rpc Read(TokenRequest) returns (TokenResponse);
    rpc WriteToReplica(WriteReplicaRequest) returns (TokenResponse);
    rpc ReadFromReplica(TokenRequest) returns (WriteReplicaRequest);
}

message TokenRequest {
    string id = 1;
}

message WriteRequest {
    string id = 1;
    string name = 2;
    uint64 low = 3;
    uint64 mid = 4;
    uint64 high = 5;
}

message TokenResponse {
    uint64 partialValue = 1;
    uint64 finalValue = 2;
    string status = 3;  // "success" or "fail"
}

message WriteReplicaRequest {
    string id = 1;
    string name = 2;
    uint64 low = 3;
    uint64 mid = 4;
    uint64 high = 5;
    uint64 partial = 6;
    uint64 final = 7;
    int64 version = 8;
}

message ReadReplicaRequest{
    string id = 1;
    string name = 2;
    uint64 low = 3;
    uint64 mid = 4;
    uint64 high = 5;
    uint64 partial = 6;
    uint64 final = 7;
    int64 version = 8;
}
